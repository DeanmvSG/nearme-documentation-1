---
converter: markdown
metadata:
  title: Technologies
  description: Technologies you need to be familiar with to build a site on platformOS.
slug: developer-guide/technologies
---

Besides standard web technologies like HTML, CSS, JavaScript (including JSON and AJAX), platformOS uses a couple of languages that you need to be familiar with to build a site on our platform:

## YAML
A human-friendly data serialization standard used in platformOS for setting properties in configuration files. To learn more, visit the [Official YAML Documentation](http://www.yaml.org/start.html).

## Liquid

A template language used in platformOS to build dynamic pages, and to provide dynamic configuration (e.g. based on currently logged in user). Use Liquid to provide authorization policy for forms and pages, or to specify notifications (email, SMS, API call).

To learn more about Liquid and how to use it in platformOS, check out our [Liquid Documentation](/api-reference/liquid/introduction) that includes an introduction for beginners, types, tags, filters, whitespace control, and detailed descriptions of platformOS-specific filters and tags â€” all of them demonstrated with examples.

## GraphQL

A query language used to communicate with our data storages. To learn more, check out the [Official GraphQL Documentation](https://graphql.org/learn/).

Check out platformOS code examples for GraphQL terms in our GraphQl glossary, and see detailed descriptions of queries, mutations, objects, scalars, interfaces, enums, and input objects in our [GraphQL Documenation](/api-reference/graphql/glossary).

To help you quickly develop GraphQl queries, we provide a [GraphiQL](https://github.com/graphql/graphiql) graphical user interface through the pos-cli. GraphiQL is a GraphQL editor with autocomplete and live docs that helps you structure GraphQL queries correctly.

<img src="{{ 'images/best-practices/qa/graphiql.png' | asset_url }}" alt="Screenshot of the graphiql editor" />

To learn more about this tool, explore [how to develop GraphQL queries using the pos-cli gui](/best-practices/qa/developing-graphql-queries-using-pos-cli-gui).

## Node.js

An asynchronous event-driven JavaScript runtime we used to support a small footprint deployment process. Visit the [Official Node.js Documentation](https://nodejs.org/en/docs/) to learn more about Node.js, and [get Node.JS here](https://www.npmjs.com/get-npm). 
