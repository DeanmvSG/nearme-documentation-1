---
converter: markdown
metadata:
  title: Renaming files, pos-cli clean --including-schema
  description: March 16, 2020
  skip_contribute_button: true
  last_edit: false
slug: release-notes/16-MARCH-2020
---

#### {{ page.metadata.description }}

<h4 class="release-note release-note__new">NEW</h4>

* added support for a the new `--including-schema` parameter of data-clean command - `pos-cli data-clean <env> --including-schema` will now remove all admin resources as well, like Forms, Model Schemas etc - effectively a shortcut to get rid of anything on the instance except of configuration (like test email, constants)

<h4 class="release-note release-note__improved">IMPROVED</h4>

* Moving / renaming names - improved mechanism of detecting which resource to update when either physical file path changes or `name` property changes to avoid creating duplicates and raise validation uniqueness errors. For example, when you move file from:
- `modules/my_modules/public/form_configurations/my_form.liquid` to `modules/my_modules/private/forms/my_form.liquid`, we will recognize this is the same file (`public` changed to `private` and `form_configurations` changed to `forms`), even if `name` property changes within the file
- `modules/my_modules/private/forms/my_form.liquid` to `modules/my_modules/private/forms/some_dir/my_form.liquid`, we will recognize this is the same file (moved the file into new directory `some_dir`), but only if `name` property will not change

Additionally, we will also correctly recognize the file if you change the `name` property without changing the file's location. However, it is allowed to update deprecated directory name to the new one, as well to move file from public to private and vice versa - as described in the first example.

<h4 class="release-note release-note__fixed">FIXED</h4>

* fixed edge case scenario of creating User Profile via GraphQL mutation, then exporting the data and trying to import it, which was causing 500 error
